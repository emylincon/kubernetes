version: '3.6'
services:
  Elasticsearch:
    image: elasticsearch:8.3.3
    container_name: elasticsearch
    restart: always
    volumes:
      - elastic_data:/usr/share/elasticsearch/data/
      - ./elastic7.x/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - elk
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:9200" ]
      interval: 10s
      timeout: 10s
      retries: 120

  Logstash:
    image: logstash:8.3.3
    container_name: logstash
    restart: always
    volumes:
      - ./logstash7.x/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash7.x/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash7.x/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./app:/app

    depends_on:
      - Elasticsearch
    ports:
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      LOGPATH: "/var/log/app"
      AWS_ACCESS_KEY_ID: ${AMAZON_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AMAZON_SECRET_ACCESS_KEY}
    networks:
      - elk

  Kibana:
    image: kibana:8.3.3
    container_name: kibana
    restart: always
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - Elasticsearch
    volumes:
      - ./kibana7.x/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elk
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:5601" ]
      interval: 10s
      timeout: 10s
      retries: 120
volumes:
  elastic_data: {}

networks:
  elk:
